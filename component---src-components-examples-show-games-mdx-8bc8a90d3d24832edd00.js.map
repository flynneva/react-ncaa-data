{"version":3,"sources":["webpack:///../src/components/examples/ShowGames.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","NCAA","ShowGames","isMDXComponent"],"mappings":"whBASO,IAAMA,EAAe,Q,uNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,qCAAoB,mBAAGC,WAAW,KAAQ,CACtC,KAAQ,sDADQ,cAApB,mFAGA,iBAAQ,CACN,GAAM,yBADR,yBAGA,+OAA8N,0BAAYA,WAAW,KAAvB,QAA9N,sBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mCAAoCC,SAAO,GAC5EL,QACAH,kBACAS,eACAC,SACAC,eAL4E,gBAM5EX,IAN4E,EAO5EH,eAP4E,GAQ3EO,QAAQ,cACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,YAAC,IAAD,CAAWA,QAAQ,gBAGnB,iBAAQ,CACN,GAAM,uBADR,uBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,q3C,qNAwDTJ,EAAWW,gBAAiB","file":"component---src-components-examples-show-games-mdx-8bc8a90d3d24832edd00.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/flynn/code/web/sports/react-ncaa-data/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { NCAA } from '../NCAA';\nimport ShowGames from './ShowGames';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"configure-proxy\"\n    }}>{`Configure Proxy`}</h3>\n    <p>{`As stated in `}<a parentName=\"p\" {...{\n        \"href\": \"https://flynneva.github.io/react-ncaa-data/readme\"\n      }}>{`the README`}</a>{`, make sure you have configured your proxy before trying this example yourself.`}</p>\n    <h3 {...{\n      \"id\": \"ncaa-context-provider\"\n    }}>{`NCAA Context Provider`}</h3>\n    <p>{`The NCAA React Component library provides preconfigured hooks for you to use to get data into your site. These should just work out of the box and provide to you the data you need as long as you use them within the `}<inlineCode parentName=\"p\">{`NCAA`}</inlineCode>{` context provider.`}</p>\n\n\n    <Playground __position={0} __code={'<NCAA>\\n  <ShowGames />\\n</NCAA>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      NCAA,\n      ShowGames,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <NCAA mdxType=\"NCAA\">\n    <ShowGames mdxType=\"ShowGames\" />\n  </NCAA>\n    </Playground> \n    <h3 {...{\n      \"id\": \"showgames-component\"\n    }}>{`ShowGames Component`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React from 'react'\nimport { useNCAA } from '../NCAA'\n\nfunction ShowGames() {\n  const { day, month, year, changeDate, games, getGames } = useNCAA();\n \n  const handleGames = () => {\n    getGames('basketball-men');\n  }\n\n  const handleDay = (new_day) => {\n    if (new_day == 0) {\n      new_day = 1;\n    }\n    date.setDate(new_day);\n    changeDate(date);\n  }\n\n  const handleMonth = (new_month) => {\n    if (new_month == 0) {\n      new_month = 1;\n    }\n    date.setMonth(new_month);\n    changeDate(date);\n  }\n\n  const handleYear = (new_year) => {\n    if (new_year == 0) {\n      new_year = 2020;\n    }\n    date.setFullYear(new_year);\n    changeDate(date);\n  }\n\n  return (\n    <div>\n      <b>Day: </b><input name=\"dayInput\" defaultValue={ day } onChange={event => {handleDay(event.target.value)}}/> <br />\n      <b>Month: </b><input name=\"monthInput\" defaultValue={ month } onChange={event => {handleMonth(event.target.value)}}/> <br />\n      <b>Year: </b><input name=\"yearInput\" defaultValue={ year } onChange={event => {handleYear(event.target.value)}}/> <br />\n      <button onClick={handleGames}>Refresh Games</button><br />\n      <br />\n      <b>Number of games on {day}-{month}-{year}: </b>{games.length}<br />\n      { games.map((game, i) => <li key={i}>{game.game.title}</li>) }\n    </div>\n  );\n}\n\nexport default ShowGames;\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}